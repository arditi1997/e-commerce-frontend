{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/auth-service/auth-service.service\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, authenticationService) {\n      this.router = router;\n      this.authenticationService = authenticationService;\n      this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    canActivate(route, state) {\n      var _a;\n\n      console.log(this.currentUser, \"currentUser\");\n\n      if (this.currentUser) {\n        // if (route.data.roles === currentUser.role?.name)\n        if (route.data.roles && route.data.roles.indexOf((_a = this.currentUser.role) === null || _a === void 0 ? void 0 : _a.name) === -1) {\n          // role not authorised so redirect to home page\n          this.router.navigate(['/' + state.url], {\n            queryParams: {\n              returnUrl: state.url\n            }\n          });\n          console.log(\"adminfalse\");\n          return false;\n        }\n\n        return true;\n      } else {\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/'], {\n          queryParams: {\n            returnUrl: state.url\n          }\n        });\n        console.log(\"admintrue\");\n        return false;\n      }\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}