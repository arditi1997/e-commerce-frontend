{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { RoleEnum } from 'src/app/model/RoleEnum';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.isLoggedIn = false;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          \"Access-Control-Allow-Credentials\": \"true\"\n        })\n      };\n      this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n      this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    get currentUserValue() {\n      return JSON.parse(localStorage.getItem('currentUser'));\n    }\n\n    login(jwtRequest) {\n      console.log(environment.APIURL + \"apiurl\");\n      return this.http.post(environment.APIURL + 'authenticate', jwtRequest, this.httpOptions).pipe(map(user => {\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n    }\n\n    logout() {\n      window.sessionStorage.clear();\n      localStorage.removeItem('currentUser');\n      localStorage.removeItem('auth-token');\n      localStorage.removeItem('auth-user');\n      this.currentUserSubject.next(null);\n    }\n\n    register(username, email, password) {\n      return this.http.post(environment.APIURL + 'admin/signup', {\n        username,\n        email,\n        password\n      }, this.httpOptions);\n    }\n\n    isUserLoggedIn() {\n      let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n      if (currentUser) {\n        this.isLoggedIn == true;\n      } else {\n        this.isLoggedIn == false;\n      }\n\n      console.log(this.isLoggedIn);\n      return this.isLoggedIn;\n    }\n\n    isAdminUser() {\n      let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n      if (currentUser.role.name == RoleEnum.Admin) {\n        return true;\n      }\n\n      return false;\n    }\n\n    logoutUser() {\n      this.isLoggedIn == false;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}